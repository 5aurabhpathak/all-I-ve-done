!function(){"use strict";function UpdateDeviceWebservice($http,$cookies,$rootScope,$timeout,userService,utilities,requestMap,$q,$location,spinnerService,webService){function sendWSRequest(o){o.hideSpinner||spinnerService.show(),delete o.hideSpinner;var deferred=$q.defer();if(!o.methodName)return console.log("You must pass 'methodName' to createWSPromise"),deferred.reject(),deferred.promise;var requestObject=packageWebServiceObject(o);console.log("updateDeviceWebservice.sendWSRequest() - requestObject: ",requestObject);var serviceCall=$http(requestObject);return webService.clearTimer(),webService.updateTimer(),serviceCall.success(function(response,status,headers,responseConfig){console.log("webService::success() - Request for '{0}': ".format(o.methodName),requestObject),console.log("webService::success() - Response for '{0}': ".format(o.methodName),response),response.token&&sessionStorage.setItem("lightingEngineToken",response.token),spinnerService.hide(),deferred.resolve(response)}),serviceCall.error(function(error,status){console.log("updateDeviceWebservice::error() - Request for '{0}': ".format(o.methodName),requestObject),console.log("updateDeviceWebservice::error() - Response for '{0}': ".format(o.methodName),error),spinnerService.hide(),deferred.reject(error)}),deferred.promise}function packageWebServiceObject(o){void 0===o.methodName&&console.log("You must pass a method name to webServices.getData",o),angular.extend(o,requestMap.get(o.methodName)),o.urlParameters&&(o.path=o.interpolateFunc(o.urlParameters)),o.url="{0}{1}/{2}{3}".format(PROTOCOL,IPADDRESS,VERSION,o.path);var request={method:o.requestType,url:o.url};return request.headers={Accept:"application/json","Content-Type":"application/json"},null!=sessionStorage.getItem("lightingEngineToken")&&(request.headers.token=sessionStorage.getItem("lightingEngineToken")),request.data=o.data?o.data:{r:!0},request}var PROTOCOL=$location.protocol()+"://",IPADDRESS=$location.host(),VERSION="v1";return{sendWSRequest:sendWSRequest}}angular.module("app.services").factory("updateDeviceWebservice",UpdateDeviceWebservice),UpdateDeviceWebservice.$inject=["$http","$cookies","$rootScope","$timeout","userService","utilities","requestMap","$q","$location","spinnerService","webService"]}();