!function(){"use strict";function AuthenticationService($http,$cookies,$rootScope,$timeout,userService,utilities,webService,$q){function login(username,password,callback){console.log("authentication.login() - Called!");var deferred=$q.defer(),request={methodName:"login",data:{userName:username,password:password}};return webService.sendWSRequest(request).then(function(responseObject){console.log("authenticationService.login() - responseObject: ",responseObject),deferred.resolve(responseObject)},function(responseObject){deferred.reject(responseObject)}),deferred.promise}function logout(){var request={methodName:"logout"};return webService.sendWSRequest(request).then(function(responseObject){return sessionStorage.clear(),responseObject})}function clearCredentials(){$rootScope.globals={},$cookies.remove("globals"),$http.defaults.headers.common.authorization="Basic"}function setCredentials(username,password){var authdata=utilities.encode(username+":!:"+password);$rootScope.globals={currentUser:{username:username,authdata:authdata}},$http.defaults.headers.common.authorization="Basic "+authdata;var cookieExp=new Date;cookieExp.setDate(cookieExp.getDate()+7),$cookies.putObject("globals",$rootScope.globals,{expires:cookieExp})}return{login:login,setCredentials:setCredentials,clearCredentials:clearCredentials,logout:logout}}angular.module("app.services").factory("authenticationService",AuthenticationService),AuthenticationService.$inject=["$http","$cookies","$rootScope","$timeout","userService","utilities","webService","$q"]}();