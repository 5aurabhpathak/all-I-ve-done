!function(){"use strict";function UtilityService($http,$q,$cookies,$rootScope,$timeout){function enableStringFormatSpecifiers(){return String.prototype.format||(String.prototype.format=function(){var args=arguments;return this.replace(/{(\d+)}/g,function(match,number){return void 0!==args[number]?args[number]:match})}),$q.when(!0)}function encode(input){var chr1,chr2,enc1,enc2,enc3,output="",chr3="",enc4="",i=0;do{chr1=input.charCodeAt(i++),chr2=input.charCodeAt(i++),chr3=input.charCodeAt(i++),enc1=chr1>>2,enc2=(3&chr1)<<4|chr2>>4,enc3=(15&chr2)<<2|chr3>>6,enc4=63&chr3,isNaN(chr2)?enc3=enc4=64:isNaN(chr3)&&(enc4=64),output=output+base64KeyStr.charAt(enc1)+base64KeyStr.charAt(enc2)+base64KeyStr.charAt(enc3)+base64KeyStr.charAt(enc4),chr1=chr2=chr3="",enc1=enc2=enc3=enc4=""}while(i<input.length);return output}function decode(input){var chr1,chr2,enc1,enc2,enc3,output="",chr3="",enc4="",i=0;/[^A-Za-z0-9\+\/\=]/g.exec(input)&&window.alert("There were invalid base64 characters in the input text.\nValid base64 characters are A-Z, a-z, 0-9, '+', '/',and '='\nExpect errors in decoding."),input=input.replace(/[^A-Za-z0-9\+\/\=]/g,"");do{enc1=base64KeyStr.indexOf(input.charAt(i++)),enc2=base64KeyStr.indexOf(input.charAt(i++)),enc3=base64KeyStr.indexOf(input.charAt(i++)),enc4=base64KeyStr.indexOf(input.charAt(i++)),chr1=enc1<<2|enc2>>4,chr2=(15&enc2)<<4|enc3>>2,chr3=(3&enc3)<<6|enc4,output+=String.fromCharCode(chr1),64!=enc3&&(output+=String.fromCharCode(chr2)),64!=enc4&&(output+=String.fromCharCode(chr3)),chr1=chr2=chr3="",enc1=enc2=enc3=enc4=""}while(i<input.length);return output}var service={encode:encode,decode:decode,enableStringFormatSpecifiers:enableStringFormatSpecifiers},base64KeyStr="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";return service}angular.module("app.services").factory("utilities",UtilityService),UtilityService.$inject=["$http","$q","$cookies","$rootScope","$timeout"]}();