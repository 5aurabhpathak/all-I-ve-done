!function(){"use strict";function UserService($timeout,$filter,$q){function getAll(){var deferred=$q.defer();return deferred.resolve(getUsers()),deferred.promise}function getById(id){var deferred=$q.defer(),filtered=$filter("filter")(getUsers(),{id:id}),user=filtered.length?filtered[0]:null;return deferred.resolve(user),deferred.promise}function getByUsername(username){var deferred=$q.defer(),filtered=$filter("filter")(getUsers(),{username:username}),user=filtered.length?filtered[0]:null;return deferred.resolve(user),deferred.promise}function create(user){var deferred=$q.defer();return $timeout(function(){getByUsername(user.username).then(function(duplicateUser){if(null!==duplicateUser)deferred.resolve({success:!1,message:'Username "'+user.username+'" is already taken'});else{var users=getUsers(),lastUser=users[users.length-1]||{id:0};user.id=lastUser.id+1,users.push(user),setUsers(users),deferred.resolve({success:!0})}})},1e3),deferred.promise}function update(user){for(var deferred=$q.defer(),users=getUsers(),i=0;i<users.length;i++)if(users[i].id===user.id){users[i]=user;break}return setUsers(users),deferred.resolve(),deferred.promise}function deleteUser(id){for(var deferred=$q.defer(),users=getUsers(),i=0;i<users.length;i++){if(users[i].id===id){users.splice(i,1);break}}return setUsers(users),deferred.resolve(),deferred.promise}function getUsers(){return localStorage.users||(localStorage.users=JSON.stringify([])),JSON.parse(localStorage.users)}function setUsers(users){localStorage.users=JSON.stringify(users)}return{getAll:getAll,getById:getById,getByUsername:getByUsername,greate:create,update:update,deleteUser:deleteUser}}angular.module("app.services").factory("userService",UserService),UserService.$inject=["$timeout","$filter","$q"]}();