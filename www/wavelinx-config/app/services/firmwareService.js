!function(){"use strict";function FirmwareService($http,$cookies,$rootScope,$timeout,userService,utilities,webService,$q,spinnerService){function uploadFile(file,urlSelection){var url;spinnerService.show();var deferred=$q.defer(),fileData=new FormData;url=1==urlSelection?"{0}{1}:{2}/{3}/update/upload".format($rootScope.PROTOCOL,$rootScope.IPADDRESS,$rootScope.PORT,$rootScope.VERSION):0==urlSelection?"{0}{1}:{2}/{3}/system/certificate/upload".format($rootScope.PROTOCOL,$rootScope.IPADDRESS,$rootScope.PORT,$rootScope.VERSION):"{0}{1}:{2}/{3}/backup/upload".format($rootScope.PROTOCOL,$rootScope.IPADDRESS,$rootScope.PORT,$rootScope.VERSION),console.log("firmwareService.uploadFile() - file: ",file),fileData.append("file",file),console.dir(fileData),console.log("firmwareservice.js::url",url);var serviceCall=$http.post(url,fileData,{transformRequest:angular.identity,headers:{token:sessionStorage.getItem("webpageToken"),"content-type":void 0}});return webService.clearTimer(),webService.updateTimer(),serviceCall.success(function(result){console.log("firmwareService.js-result",result),spinnerService.hide(),deferred.resolve(result)}),serviceCall.error(function(error){spinnerService.hide(),deferred.reject(error)}),deferred.promise}function getWACUpdateInfo(){var request={methodName:"getWACUpdateInfo"};return webService.sendWSRequest(request)}function updateFirmWare(startWacUpdate){var request={methodName:"updateFirmWare",data:startWacUpdate};return webService.sendWSRequest(request)}return{updateFirmWare:updateFirmWare,uploadFile:uploadFile,getWACUpdateInfo:getWACUpdateInfo}}angular.module("app.services").factory("firmwareService",FirmwareService),FirmwareService.$inject=["$http","$cookies","$rootScope","$timeout","userService","utilities","webService","$q","spinnerService"]}();